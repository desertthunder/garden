{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Desert Thunder's Digital Garden","text":"<p>Hi! My name is Owais and this is my digital garden. It's a collection of notes I've taken on topics that interest me. This includes a lot of engineering and programming notes that I've taken throughout my career and while working on personal projects. My hope is that someone learns something new or finds some wisdom that resonates with them.</p> <p>Digital gardens have been fascinating for me for a long time. I miss the days of stumbling upon information on an odd personal site on the internet and want to be a part of bringing that back. I've tried keeping gardens in various iterations with tools like notion and even google drive, but nothing has been quite as consistent as a combination of some plaintext editor (VSCode &amp; now Neovim) or \"Knowledge IDE\" like Obsidian.</p>"},{"location":"#inspiration","title":"Inspiration","text":"<p>Top of the list is definitely the Blue Book. After starting a new python project and activating my virtual environment, I pretty much always install mkdocs with the material theme. That site, while also having some fantastic information, reminded me that I can just use mkdocs.</p> <p>Also, take a look at my notes on cultivating a garden.</p>"},{"location":"#my-tools","title":"My Tools","text":""},{"location":"#operating-systems","title":"Operating System(s)","text":"Fedora MacOS"},{"location":"#terminal-tools","title":"Terminal Tools","text":"Alacritty Zsh"},{"location":"#text-editors","title":"Text Editors","text":"Neovim Obsidian VSCode"},{"location":"#attributions","title":"Attributions","text":"<p>Lightning Site Icon by zky.icon from Flaticon</p> <p></p>"},{"location":"algorithms/dijkstra/","title":"Dijkstra's Algorithm","text":"<ul> <li> <p>Solves the shortest path to X in a weighted graph</p> <ul> <li>Think fastest path if each edge has a distance</li> <li>Steps:<ol> <li>Find the \u201ccheapest\u201d node. (The node you can get to in the least amount of time from the start)</li> <li>Update the costs of the neighbors of this node.</li> <li>Repeat for every node.</li> <li>Calculate the final path.</li> </ol> </li> </ul> </li> <li> <p>A graph has a cycle if you can start at a node and end up back at it</p> <ul> <li>Dijkstra's algorithm only works with directed, acyclic graphs</li> </ul> </li> <li>Dijkstra's algorithm doesn't work with negative weight edges (look into Bellman-Ford)</li> </ul>"},{"location":"algorithms/dijkstra/#implementation","title":"Implementation<sup>1</sup>","text":"<ul> <li>A graph can be implemented with a dictionary</li> <li>This requires three hash tables/dictionaries:<ul> <li>The graph (there will be a nested hash table that has the weights of the nodes)</li> <li>Costs</li> <li>Parents</li> </ul> </li> </ul>"},{"location":"algorithms/dijkstra/#algorithm","title":"Algorithm","text":"<ul> <li>Find the node with the lowest costs</li> <li>Get the costs and neighbors of that node</li> <li>Iterate through the neighbors and compare the costs<ul> <li>Mark the neighbor as processed at the end of the loop</li> </ul> </li> </ul> <ol> <li> <p>Bhargava, Aditya Y. Grokking Algorithms. Manning Publications, 2016.\u00a0\u21a9</p> </li> </ol>"},{"location":"algorithms/selection-sort/","title":"Selection Sort","text":""},{"location":"algorithms/selection-sort/#memory-arrays-linked-lists-selection-sort","title":"Memory, Arrays &amp; Linked Lists, Selection Sort","text":"<ul> <li>Arrays contain elements stored contiguously in memory. Easier to read because you can calculate the address of elements (indexing!)<ul> <li>You can access the elements of an array in any order (random access)</li> <li>In contrast, elements in a linked list can be anywhere. Inserts are easier.</li> <li>\"Insertions can fail sometimes when there\u2019s no space left in memory. But you can always delete an element.\" (P. 30)</li> </ul> </li> <li>In selection sort<sup>1</sup>, you have to go through each element in a list and compare it to the last element in the new list. This is $O(n^2)$.</li> </ul> <ol> <li> <p>Bhargava, Aditya Y. Grokking Algorithms. Manning Publications, 2016.\u00a0\u21a9</p> </li> </ol>"},{"location":"books/","title":"Books","text":"<p>Links to notes I've taken on books.</p> <ol> <li>How to Take Smart Notes</li> <li>How to Be Perfect</li> </ol>"},{"location":"data-structures/","title":"Data Structures","text":"<ul> <li>A data structure<sup>1</sup> is any data that's represented with its operations/methods.</li> <li>Often used to describe the way a collection of items is organized.</li> <li>Basic operations are retrieval/reading, insertion, and deletion.<ul> <li>These are described by the interface of the data structure's abstract data type.<sup>2</sup></li> <li>An abstract data type, abbreviated ADT, is a data type's spec in a language</li> </ul> </li> </ul> <p>Info</p> <p>See Virginia Tech's opendsa site for more books.</p> <ol> <li> <p>1.1. Data Structures and Algorithms \u2014 CS2 Software Design &amp; Data Structures. https://opendsa-server.cs.vt.edu/OpenDSA/Books/CS2/html/IntroDSA.html#a-philosophy-of-data-structures. Accessed 10 May 2024.\u00a0\u21a9</p> </li> <li> <p>1.2. Abstract Data Types \u2014 CS3 Data Structures &amp; Algorithms. https://opendsa-server.cs.vt.edu/OpenDSA/Books/CS3/html/ADT.html. Accessed 10 May 2024\u00a0\u21a9</p> </li> </ol>"},{"location":"data-structures/arrays/","title":"Arrays &amp; Data Structure Basics","text":"<ul> <li>MIT 6.006 Lecture: https://www.youtube.com/watch?v=CHhwJjR0mZA</li> <li>Take a look at lecture notes on the website for addl. information.</li> </ul>"},{"location":"data-structures/arrays/#basics","title":"Basics","text":"<ul> <li>Interface (API, or Abstract Data Type) tells you what you want to do (specification)</li> <li>What operations do, are supported, and their meaning</li> <li>In contrast a data structure tells you how (to store)</li> <li>We're given algorithms to tell us how to support those operations</li> <li>In algorithms we care a lot about scalability for very large N.</li> </ul>"},{"location":"data-structures/arrays/#sequences","title":"Sequences","text":"<ul> <li>Static sequence interface: number of items does not change (Build, Length, Get, Set, Iteration)</li> </ul>"},{"location":"data-structures/arrays/#arrays","title":"Arrays","text":"<ul> <li>Memory Allocation Model - you can allocate an array of size N, in O(N) (it takes linear time)</li> <li>The amount of space you use to allocate the array is the amount of time it took.</li> <li>Access is constant time - we need to assume that W is at least log(N) to address all N items in my input.</li> <li>W is the machine word size, which is 64 bits on most modern machines.</li> <li>We want to be able to insert or delete from the middle of the sequence. i.e. Insert At or Delete At.</li> <li>Inserting or Deleting at the beginning requires you to re-index everything</li> </ul>"},{"location":"data-structures/arrays/#linked-lists","title":"Linked Lists","text":"<ul> <li>We store our items in Nodes, in order</li> <li>Each item has a Node, and a next field (pointer)</li> <li>We need to track the Head Node</li> </ul>"},{"location":"data-structures/arrays/#dynamic-arrays","title":"Dynamic Arrays","text":"<ul> <li>aka Python's lists</li> <li>Relax the constraint that the size of the array we use equals N</li> <li>\"Roughly\" means throw away constant factors when making approximations</li> <li>Add to end unless length equals size, we're out of space.</li> <li>In a static array, we have to allocate a new array of size N + 1 when adding one element.</li> <li>In contrast, a dynamic array we allocate a new array of the original size plus some constant. It's approximately the same as a static array because we don't use constants in approximations.</li> <li>Constant amoritization analysis averages the running times of operations in a sequence over that sequence</li> </ul>"},{"location":"data-structures/arrays/#recap","title":"Recap","text":"<ul> <li>What's an interface? How does a data structure relate?</li> <li>What is the interface for a static sequence?</li> <li>What is the Memory Allocation Model?</li> <li>Dynamic v. Static array allocation</li> <li>What is amoritization?</li> </ul>"},{"location":"data-structures/stacks/","title":"More on Stacks","text":""},{"location":"data-structures/stacks/#what-is-a-stack","title":"What is a stack?","text":"<ul> <li>A one-ended linear data structure that models a real stack.<sup>1</sup></li> <li>Two operations, push (to top), pop (off the top)<ul> <li>We can only act on top of the stack</li> </ul> </li> <li>Last In, First Out (LIFO)</li> </ul>"},{"location":"data-structures/stacks/#example-problems","title":"Example Problems","text":"<ul> <li>Brackets (validate that brackets are closed).<ul> <li>ex. <code>[[{}]()]</code><ul> <li>Steps:<ul> <li>Push <code>[</code>: <code>[</code></li> <li>Push <code>[</code>: <code>[[</code></li> <li>Push <code>{</code>: <code>[[{</code></li> <li>Pop <code>{</code> (we hit <code>}</code>): <code>[[</code></li> <li>Pop <code>[</code>: <code>[</code></li> <li>Push <code>(</code>: <code>[(</code></li> <li>Pop <code>(</code>: <code>[</code></li> <li>Pop <code>[</code>: <code>...</code></li> <li>Since the stack is now empty, the bracket sequence is valid</li> </ul> </li> </ul> </li> </ul> </li> <li>Tower of Hanoi Game<ul> <li>Three pegs are stacks.</li> <li>No disk can be placed on smaller disk</li> <li>Move disks from one end to the other</li> </ul> </li> </ul>"},{"location":"data-structures/stacks/#stack-implementation","title":"Stack Implementation","text":"<ul> <li>Usually implemented with linked lists or arrays.</li> </ul>"},{"location":"data-structures/stacks/#singly-linked-list","title":"Singly Linked List","text":"<ul> <li>Start with null node.</li> <li>Create new heads with pointer to newest node (push)</li> <li>Move head pointer to next node, and dereference old head (pop)</li> </ul>"},{"location":"data-structures/stacks/#source-code","title":"Source Code","text":"<ul> <li><code>java.util</code> has a LinkedList</li> <li>implements the iterable interface (has a generic)</li> </ul>"},{"location":"data-structures/stacks/#questions","title":"Questions","text":"<ul> <li>What is a concurrent modification error?</li> </ul> <ol> <li> <p>WilliamFiset. Queue Implementation. 2017. YouTube, https://www.youtube.com/watch?v=EoisnPvUkOA.\u00a0\u21a9</p> </li> </ol>"},{"location":"data-structures/trees/","title":"Trees","text":"<p>\"All roads lead to trees.\" Examples: DOM, Filesystem (hard drive)</p>"},{"location":"data-structures/trees/#terminology","title":"Terminology","text":"<ul> <li>root: topmost parent node</li> <li>height: longest path from root the youngest (bottommost) child node</li> <li>binary tree: a tree with at most 2 children</li> <li>general tree: a tree with more than 0 children</li> <li>balanced tree: a tree is perfectly balanced when any node's left and right children have the same height</li> <li>branching factor: amount of children a tree has</li> </ul>"},{"location":"data-structures/trees/#traversal","title":"Traversal","text":"<ul> <li>Review recursion!</li> <li>Visit a node and then recurse is pre-order traversal.</li> <li>In languages where you have to clean up memory, you do a post-order traversal.</li> <li>preorder root's at beginning, in order root's at the middle, post-order root's at the end.</li> <li>All traversals are <code>O(n)</code> because for all traversals you visit every node.</li> <li>We're implicitly using a stack when we do depth first search. Makes sense because we're leveraging the call stack.</li> </ul>"},{"location":"data-structures/trees/#references","title":"References","text":"<ul> <li>ThePrimeagen</li> </ul>"},{"location":"data-structures/collections/","title":"Stacks, Queues, and Abstract Data Types","text":"<ul> <li>Abstract data types are sets of theoretical rules that revolve around some built-in data structure.</li> <li>Arrays with restrictions related to order.<sup>1</sup></li> </ul>"},{"location":"data-structures/collections/#stacks","title":"Stacks","text":"<ul> <li>Data can only be added (push), removed (pop), and read (peek) from the top of the stack (i.e. end of the array)</li> <li>Stacks are last in first out (LIFO), whereas queues are first in first out (FIFO).</li> </ul>"},{"location":"data-structures/collections/#queues","title":"Queues","text":"<ul> <li>Data can be added to the end (push/enqueue). It can be read and removed from the beginning (peek and dequeued)</li> <li>Queues are great for handling asynchronous processes.</li> </ul> <ol> <li> <p>A Common-Sense Guide to Data Structures and Algorithms in Python. Pragmatic bookshelf, 2023.\u00a0\u21a9</p> </li> </ol>"},{"location":"engineering/","title":"Engineering","text":"<p>Notes on Software Engineering as an industry and various tools and practices that are used.</p>"},{"location":"engineering/bash_http/","title":"API Testing In Bash","text":""},{"location":"engineering/bash_http/#pipe-operator","title":"Pipe Operator","text":"<p>The pipe operator (<code>|</code>) connects the STDOUT (standard output) file descriptor of the first process to the STDIN (standard input) of the second. What happens then is that when the first process writes to its STDOUT, that output can be immediately read (from STDIN) by the second process.</p>"},{"location":"engineering/bash_http/#jq","title":"jq","text":"<p>To access a key in a JSON object, use the following syntax:</p> <pre><code>jq '.key'\n\n# Or with a json array\njq '.array[0]'\n</code></pre>"},{"location":"engineering/bash_http/#curl","title":"cURL","text":"<p>To make a request to an API, use the following syntax:</p> <p>The <code>-s</code> flag is used to suppress the progress bar and other unnecessary</p> <p>information.</p> <pre><code>curl -s https://statsapi.mlb.com/api/v1/teams\n</code></pre> <p>Adding params &amp; piping to <code>jq</code> for pretty printing:</p> <pre><code>curl -s https://statsapi.mlb.com/api/v1/teams?sportId=1 | jq '.teams[0]'\n</code></pre>"},{"location":"engineering/architecture/adr/","title":"Architecture Decision Records","text":""},{"location":"engineering/architecture/adr/#overview","title":"Overview","text":"<ul> <li>An Architecture Decision Record (abbr. ADR) is any document that captures decisions and context of how an architecture decision was made and its resulting context.<ul> <li>In modern codebases, tests and readable code can replace documentation.<sup>4</sup></li> </ul> </li> <li>Large documents are not read often and smaller, atomic writing is easiest for consumption.</li> <li>In any system, we want to avoid blind acceptance and reversal</li> <li>Significant decisions are those that \"affect the structure, non-functional characteristics, dependencies, interfaces, or construction techniques.\"<sup>1</sup></li> </ul>"},{"location":"engineering/architecture/adr/#benefits","title":"Benefits","text":"<ul> <li>Onboarding can include an understanding of the why behind a decision<ul> <li>Handover can be smooth</li> </ul> </li> <li>Since stakeholders can read and digest these, you can have multi-discipline best practice alignment<sup>2</sup></li> <li>Keep why and how out of the original maintainer's brain</li> </ul>"},{"location":"engineering/architecture/adr/#when-to-write","title":"When to Write","text":"<ul> <li>Backfilling decisions</li> <li>Large change proposals (these can be rejected too!)</li> <li>Small/lightweight changes too</li> </ul>"},{"location":"engineering/architecture/adr/#sections","title":"Sections","text":""},{"location":"engineering/architecture/adr/#context","title":"Context","text":"<ul> <li>Describe forces at play.</li> <li>Political, social, project specific</li> </ul>"},{"location":"engineering/architecture/adr/#consequences","title":"Consequences","text":"<ul> <li>Resulting context (positive, negative, and neutral)</li> <li>i.e. Why or why not a decision was made<sup>5</sup></li> <li>Larger ADRs provide context for smaller, subsequent ADRs</li> </ul>"},{"location":"engineering/architecture/adr/#tips","title":"Tips","text":"<ul> <li>Lightweight markup language</li> <li>Less than 2 pages</li> <li>Use a sequential naming scheme.</li> <li>Don't use these to replace good commit messages.<sup>3</sup></li> </ul>"},{"location":"engineering/architecture/adr/#template","title":"Template","text":"<p>Used by RedHat.<sup>3</sup></p> RedHat ADR Template <ol> <li>Number/Date:\u00a0A unique increasing number and date that usually follows  the\u00a0ADR-nnnn\u00a0pattern to help sort them from old to new</li> <li>Title:\u00a0Indicates the content</li> <li>Context (Why):\u00a0Describes the current situation and\u00a0why\u00a0you made this decision or thought it necessary\u2014some variations explicitly break out an \"alternatives covered\" section to ensure all considerations get recorded</li> <li>Decision (What/How):\u00a0Describes the\u00a0what\u00a0and\u00a0how\u00a0of the feature</li> <li>Status:\u00a0Describes the status; note that ADRs can be superseded later by newer ADRs</li> <li>Consequences:\u00a0Describes the effect of the decision, listing positive and negative aspects</li> </ol>"},{"location":"engineering/architecture/adr/#further-reading","title":"Further Reading","text":"<p>https://cloud.google.com/architecture/architecture-decision-records</p> <p>https://docs.aws.amazon.com/prescriptive-guidance/latest/architectural-decision-records/adr-process.html</p> <p>https://github.com/peter-evans/lightweight-architecture-decision-records</p> <p>https://adr.github.io</p> <p>https://github.com/operate-first/blueprint/tree/main/adr</p> <ol> <li> <p>Nygard, Michael. \u201cDocumenting Architecture Decisions.\u201d\u00a0Cognitect.Com, 15 Nov. 2011, https://www.cognitect.com/blog/2011/11/15/documenting-architecture-decisions.\u00a0\u21a9</p> </li> <li> <p>Engineering, Spotify. \u201cWhen Should I Write an Architecture Decision Record.\u201d\u00a0Spotify Engineering, 14 Apr. 2020, https://engineering.atspotify.com/2020/04/when-should-i-write-an-architecture-decision-record/.\u00a0\u21a9</p> </li> <li> <p>hrupp. Why You Should Be Using Architecture Decision Records to Document Your Project. 16 Dec. 2021, https://www.redhat.com/architecture-decision-records.\u00a0\u21a9\u21a9</p> </li> <li> <p>\u201cLightweight Architecture Decision Records | Technology Radar.\u201d\u00a0Thoughtworks, https://www.thoughtworks.com/radar/techniques/lightweight-architecture-decision-records. Accessed 31 May 2024.\u00a0\u21a9</p> </li> <li> <p>ckittel. Architecture Decision Record - Microsoft Azure Well-Architected Framework. 14 Nov. 2023, https://learn.microsoft.com/en-us/azure/well-architected/architect-role/architecture-decision-record.\u00a0\u21a9</p> </li> </ol>"},{"location":"engineering/databases/dsn/","title":"DSN","text":"<p>A Data Source Name (DSN) is a string used by database drivers that contains the information required to connect to a database.</p> <p>In other words, \"the name that applications use to request a connection to an ODBC Data Source\"<sup>1</sup>.</p> <ol> <li> <p>What Is a DSN (Data Source Name)? - Microsoft Support. https://support.microsoft.com/en-us/topic/what-is-a-dsn-data-source-name-ae9a0c76-22fc-8a30-606e-2436fe26e89f. Accessed 12 May 2024.\u00a0\u21a9</p> </li> </ol>"},{"location":"engineering/general/daybooks/","title":"Engineering Daybook","text":"<ul> <li>An engineering daybook<sup>1</sup> can/should contain...<ul> <li>What you did that day</li> <li>What you learned</li> <li>Notes from readings related to work</li> <li>And should allow you to think with a pen in hand/rubber ducking!</li> </ul> </li> </ul> <ol> <li> <p>Thomas, David, and Andrew Hunt. The Pragmatic Programmer, 20th Anniversary Edition: Journey to Mastery. Second edition. Boston: Addison-Wesley, 2019.\u00a0\u21a9</p> </li> </ol>"},{"location":"engineering/web/batteries/","title":"Batterie's Included","text":"<ul> <li>Web frameworks like Django &amp; Rails are powerful because they remove the overhead required to bootstrap a web application (database connection, security, responses, etc.)</li> <li>Batteries included<sup>1</sup> in Django's case gives us everything rails does (user authentication, testing, database models, forms, urls)</li> </ul> <ol> <li> <p>Vincent, William S.\u00a0Django for Beginners: Build Websites with Python &amp; Django. William S. Vincent, 2018.\u00a0\u21a9</p> </li> </ol>"},{"location":"engineering/web/django/rest/","title":"Django REST Framework","text":"<p>Warning</p> <p>This is a work in progress.</p> <p>The de-facto standard for building REST APIs with Django. Also known as DRF.</p>"},{"location":"engineering/web/django/rest/#viewsets","title":"Viewsets","text":"<ul> <li>A viewset<sup>1</sup> is DRF's version of a controller (Rails style)</li> </ul>"},{"location":"engineering/web/django/rest/#serializers","title":"Serializers<sup>2</sup>","text":"Definition <p>Serializers allow complex data such as querysets and model instances to be  converted to native Python datatypes that can then be easily rendered into  JSON, XML or other content types. Serializers also provide deserialization,  allowing parsed data to be converted back into complex types, after first  validating the incoming data.</p> <ul> <li>Hyperlinked Fields<sup>2</sup> use a lookup_field attribute (found in Meta.extra_kwargs). It defaults to pk.</li> <li>The DRF docs advise that you leverage repr on the HyperlinkedModelSerializer class in the django shell.</li> </ul> <ol> <li> <p>Viewsets - Django REST Framework. https://www.django-rest-framework.org/api-guide/viewsets/#viewsets. Accessed 31 May 2024.\u00a0\u21a9</p> </li> <li> <p>Serializers - Django REST Framework. https://www.django-rest-framework.org/api-guide/serializers/. Accessed 31 May 2024.\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"philosophy/aristotle-problem/","title":"Aristotle's Problem Domain","text":"<p>Question</p> <p>Aristotle's problem domain in trying to define<sup>1</sup> what makes a person good:</p> <ol> <li>What qualities they ought to have?</li> <li>How much should they have?</li> <li>Is everyone capable of having them?</li> <li>How do we get them?</li> <li>What does having them look like?</li> </ol> <ul> <li>The end goal is happiness (eudaimonia/flourishing)<ul> <li>To do so we need virtues (things that make us good at being human)</li> </ul> </li> <li>We're born with potential to get virtues<ul> <li>And a natural aptitude towards some</li> <li>We become virtuous by doing virtuous things (habitual)</li> </ul> </li> </ul> <ol> <li> <p>Schur, Michael. How to Be Perfect: A Foolproof Guide to Making the Correct Moral Decision in Every Situation You Ever Encounter Anywhere on Earth, Forever. First Simon&amp;Schuster hardcover edition, Simon &amp; Schuster, 2022.\u00a0\u21a9</p> </li> </ol>"},{"location":"philosophy/bentham-scale/","title":"Bentham's Scale","text":"<ul> <li>Intensity</li> <li>Duration</li> <li>Certainty</li> <li>Propinquity (how soon it will happen)</li> <li>Fecundity (how much pleasure)</li> <li>Purity ($\\frac{Pleasure}{Pain}$)</li> <li>Extent (how many people benefit)<ul> <li>If you're acting publicly, spread as much pleasure you can</li> </ul> </li> </ul>"},{"location":"philosophy/bentham-scale/#backlinks","title":"Backlinks","text":"<ol> <li>[[how-to-be-perfect]]</li> <li>[[the-trolley-problem]]</li> </ol>"},{"location":"philosophy/book-schur-2023/","title":"How to Be Perfect","text":"<p>Written by the venerable Michael Schur, creator of Parks &amp; Recreation and of course, The Good Place.</p> <ul> <li>Morality is how we think we should behave on earth</li> </ul> <p>Ethical Dilemma? Ask yourself...</p> <ol> <li>What are we doing?</li> <li>Why are we doing it?</li> <li>Is there something we could do that\u2019s better?</li> <li>Why is it better?</li> </ol> <ul> <li>Everything has an ethical undercurrent and everything we do affects somebody</li> <li>Failure in trying to do the right thing is inevitable<ul> <li>But trying means we care</li> </ul> </li> <li>Virtue ethics - what makes a person good or bad?<ul> <li>Aristotle wrestled with this</li> </ul> </li> <li>Brilliant instructors and wise friends are very important</li> <li>The Golden mean/goldilocks rule is that there is a spectrum that is like a see saw for virtues. If we veer to far towards one extreme, the see saw becomes imbalanced.<ul> <li>ex. Mildness is the golden mean of anger</li> <li>Very challenging to define</li> </ul> </li> <li>An excess of a virtue can harm the people around you</li> <li>If we don't take stock of our virtues, we can find ourselves moving towards extremes and these aspects can \"calcify.\"</li> <li>As you practice, it becomes effortless - Schur talks about how Steve Carrell &amp; Amy Poehler were like that with their comedy</li> <li>The closer we get to a golden mean, the easier it is to find others.<ul> <li>Examples include kindness and generosity</li> </ul> </li> <li>Religious zealots ignore cruelty as it is not a slight against god</li> <li>Knowledge is how we escape cruelty</li> </ul> The Trolley Problem <p>(by Philippa Foot)</p> <p>Do you let the trolley kill five workers ahead of you or do you switch to the other track and let one worker die?</p> <p>Read more here: [[the-trolley-problem|link]]</p>"},{"location":"philosophy/book-schur-2023/#quotes","title":"Quotes","text":"<p>Hope</p> <p>With enough work, no one is doomed to be forever deprived of magnanimity or courage or any other desirable quality, the way I\u2019m doomed to get lost every time I walk around a parking garage looking for my car.<sup>1</sup></p> Samuel Beckett <p>Try again. Fail again. Fail better.</p> Philip Pullman <p>People are too complicated to have simple labels.</p> Julia Shklar <p>[C]ruelty\u2014the willful inflicting of physical pain on a weaker being in order to cause anguish and fear\u2014is a wrong done entirely to another creature.</p> Montesquieu <p>[K]nowledge makes men gentle, just as ignorance hardens us.</p> <ol> <li> <p>Schur, Michael. How to Be Perfect: A Foolproof Guide to Making the Correct Moral Decision in Every Situation You Ever Encounter Anywhere on Earth, Forever. First Simon&amp;Schuster hardcover edition, Simon &amp; Schuster, 2022.\u00a0\u21a9</p> </li> </ol>"},{"location":"philosophy/heuristic/","title":"Heuristic","text":"<ul> <li>Enter an input and get an output (philosophical algorithm or function).</li> <li>Gives us a rule of thumb for a certain scenario,<sup>1</sup>  as a guideline for our behavior</li> </ul> <ol> <li> <p>How to Be Perfect \u21a9</p> </li> </ol>"},{"location":"philosophy/trolley-problem/","title":"The Trolley Problem","text":"<ul> <li>The problems arise when circumstances change<ul> <li>What if we're at a station with the lever and don't have the same amount of information?</li> <li>What if we know someone on the tracks?</li> <li>What if we push someone over a bridge to slow down the train and save everyone on the tracks?</li> </ul> </li> <li>Utilitarianism<ul> <li>Branch of consequentialism (only thing that matters is results)</li> <li>The best action is what makes people the most happy (greatest happiness principle)</li> <li>Developed by British philosophers Bentham (wanted himself studied and preserved after death) and Mill (had a rough childhood</li> </ul> </li> <li>[[benthams-scale]] is a way to quantify pleasure &amp; pain (hedons &amp; dolors - happiness points &amp; sadness demerits)</li> <li>Utilitarians believe all people's happiness matters equally</li> <li>Correlation does not imply causation<ul> <li>Humans don't often know the consequences of their actions</li> </ul> </li> <li>Most human actions don't have all the information - before or after</li> <li>Critiques of utilitarianism center on the wide differences between everybody's pleasure and pain</li> <li>When our actions can cause pain and suffering as a result, utilitarianism fails to take into account our integrity<ul> <li>Advantage of utilitarianism is a straightforward distribution (those in need get the most)</li> </ul> </li> </ul>"},{"location":"philosophy/trolley-problem/#sourcebacklink","title":"Source/Backlink","text":"<p>[[how-to-be-perfect]]</p>"},{"location":"programming/","title":"Programming","text":"<p>This will contain notes related to programming languages I've \"learned\" or am learning. Can you ever really know a programming language top to bottom unless you wrote it?</p>"},{"location":"programming/#proficiencies","title":"Proficiencies","text":"<ul> <li>TypeScript</li> <li>Python</li> <li>Java</li> <li>Ruby</li> <li>Go</li> </ul>"},{"location":"programming/#languages-to-learn","title":"Languages to Learn","text":"<p>As of May 2024, these are languages that are on my radar to learn:</p> <ul> <li>C++</li> <li>Elixir</li> <li>Rust</li> <li>Elm</li> <li>or Gleam</li> </ul>"},{"location":"programming/design/adapter/","title":"Adapter Pattern","text":"<ul> <li>Structural design patterns deal with inheritance and composition.</li> <li>An adapter<sup>1</sup> is an object that converts the interface of one object to one that another can understand.<ul> <li>Example: A XML to JSON parser</li> <li>Implements the interface of one object and wraps the other (to hide complexity)</li> </ul> </li> </ul> <pre><code>flowchart TD\n A(Client)\n B(Client Interface)\n C(Adapter)\n D(Service)\n\n A --&gt; B\n C -.-&gt; B\n C -.-&gt; D</code></pre> <ul> <li>An object adapter works with the client interface</li> <li>A class adapter implements the interface of the client and service classes.</li> <li> <p>When to use?</p> <ol> <li>An existing class' interface isn't compatible with the rest of a system's code.</li> <li>Reuse existing subclasses that don't have common functionality.</li> </ol> </li> <li> <p>Implementation</p> <ol> <li>Write client interface to describe interaction between client and service.</li> <li>Adapter class should have a reference to the service. The service handles  the business logic.</li> </ol> </li> <li>Follows Single Responsibility Principle and Open/Closed Principle.</li> <li>However, sometimes its just easier to make the service compatible with the rest of your code.</li> </ul> <ol> <li> <p>Adapter. https://refactoring.guru/design-patterns/adapter. Accessed 10 May 2024.\u00a0\u21a9</p> </li> </ol>"},{"location":"programming/golang/http-requests/","title":"HTTP Requests in Golang","text":"<p>Use the ioutil.ReadAll function to read the HTTP response\u2019s Body.</p> <p>The Body is an io.ReadCloser value, a combination of io.Reader and io.Closer, which means you can read the body\u2019s data using anything that can read from an io.Reader value.<sup>1</sup></p> <p>Note that while this is still a valid way to read the body of an HTTP response, the ioutil package has been deprecated in Go 1.16. You can still use it, but the godoc will tell you to just call <code>io.ReadAll</code> directly.</p>"},{"location":"programming/golang/http-requests/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"io\"\n    \"net/http\"\n)\n\nfunc main() {\n    resp, err := http.Get(\"https://pokeapi.co/api/v2/pokemon/681\")\n\n    if err != nil {\n        fmt.Println(\"Error: \", err)\n        return\n    }\n\n    defer resp.Body.Close()\n\n    body, err := io.ReadAll(resp.Body)\n\n    if err != nil {\n        fmt.Println(\"Error: \", err)\n\n        return\n    }\n\n    fmt.Println(string(body))\n}\n</code></pre> <ol> <li> <p>Kristin Davidson and Rachel Lee. How To Make HTTP Requests in Go | DigitalOcean. https://www.digitalocean.com/community/tutorials/how-to-make-http-requests-in-go. Accessed 11 May 2024.\u00a0\u21a9</p> </li> </ol>"},{"location":"programming/python/logging/","title":"Logging","text":""},{"location":"programming/python/logging/#overview","title":"Overview","text":"<p>Anyone who\u2019s ever worked on a large production project with intense demands understands the importance of using the different log levels appropriately, creating module-specific loggers, meticulously logging information about important events, and including extra detail about the application\u2019s state when those events are logged.</p> <ul> <li>Logs<sup>1</sup> help when standard debugging tools are not enough.</li> <li>Levels</li> <li>CRITICAL<ul> <li>Requires urgent attention (your app can't run without this addressed)</li> </ul> </li> <li>ERROR<ul> <li>Uncaught exceptions</li> <li>When <code>DEBUG</code> is <code>False</code>, Django emails admins so consider logging only whatever is worth emailing to you or your administrators</li> </ul> </li> <li>WARNING<ul> <li>Good for logging events that are unusual and potentially bad, but not as bad as ERROR-level events.</li> </ul> </li> <li>INFO<ul> <li>Application state</li> </ul> </li> <li>DEBUG<ul> <li>Wherever a <code>print</code> might go</li> </ul> </li> <li><code>Logger,exception</code> includes tracebacks. For additional info, use the <code>exc_info</code>   kwarg</li> <li>One logger per module!</li> </ul> <pre><code># You can place this snippet at the top\n# of models.py, views.py, or any other\n# file where you need to log.\nimport logging\n\nlogger = logging.getLogger(__name__)\n</code></pre> <ol> <li> <p>Greenfeld, Daniel, and Audrey Roy. Two Scoops of Django 1.11: Best Practices for Django Web Framework. Los Angeles, California, Two Scoops Press, 2017.\u00a0\u21a9</p> </li> </ol>"},{"location":"psychology/dealing-with-pain/","title":"Dealing with (Emotional) Pain","text":""},{"location":"psychology/dealing-with-pain/#three-ways-to-deal-with-difficult-emotions","title":"Three Ways to Deal with Difficult Emotions<sup>1</sup>","text":"<ol> <li>Give yourself kindness &amp; care</li> <li>Remind yourself pain is a part of the human experience</li> <li>Hold your thoughts &amp; emotions in mindful awareness</li> </ol> <ol> <li> <p>Neff, Kristin. Self-Compassion: Stop Beating Yourself up and Leave Insecurity Behind. 1st ed., William Morrow, 2011.\u00a0\u21a9</p> </li> </ol>"},{"location":"psychology/hedonic-treadmill/","title":"Hedonic Treadmill","text":"<p>You work run on a treadmill of pleasure (hedonism is pleasure). But as you grow tired, you have to keep working to maintain that level of pleasure.<sup>1</sup> Pleasure in this case is happiness.</p> <p>Self-esteem is a god that can't be pleased.</p> <ol> <li> <p>\u201cHedonic Treadmill | Psychology Today.\u201d Accessed October 5, 2022. https://www.psychologytoday.com/us/basics/hedonic-treadmill.\u00a0\u21a9</p> </li> </ol>"},{"location":"psychology/ifs/","title":"Internal Family System's Therapy","text":"<ul> <li>Internal Family Systems therapy's purpose is to empower us to find insights in  to our own psychodynamics.</li> <li>Your parts are naturally endowed with qualities such as joy, freedom,  perceptiveness, and creativity, but these have been lost because of childhood   wounds.<sup>1</sup></li> <li>We build up protective, defensive parts of ourselves in response to trauma and these don't serve us well as adults</li> </ul> <ol> <li> <p>Earley, Jay, and Richard C. Schwartz. Self Therapy: A Step-by-Step Guide to Creating Wholeness and Healing Your Inner Child Using IFS, a New, Cutting-Edge Psychotherapy. Second Edition, Pattern System Books, 2009.\u00a0\u21a9</p> </li> </ol>"},{"location":"psychology/indestructible/","title":"Indestructible","text":"<ul> <li>Kafka defines<sup>1</sup> the indestructible as the place at the bottom of every individual that keeps going whether they choose to or not.</li> </ul> <p>Quote</p> <p>The indestructible is one: it is each individual human being and, at the same time, it is common to all, hence the incomparably indivisible union that exists between human beings.</p> <ol> <li> <p>Kafka, Franz, Roberto Calasso, Geoffrey Brock, and Michael Hofmann. The Zu\u0308rau Aphorisms of Franz Kafka. 1st American ed. New York: Schocken Books, 2006.\u00a0\u21a9</p> </li> </ol>"},{"location":"psychology/shoshin/","title":"Shoshin","text":"<p>Defined as having an attitude of openness and eagerness without pre-conceptions when studying at a subject at an advanced level, like a beginner would or should</p> <ul> <li>The more you know about a subject, the more likely you are to be close minded about   new information, i.e. intellectual hubris</li> <li>Santiago Ram\u00f3n y Cajal was maligned for saying that adults don't grow new neurons</li> <li>Alfred Wegener said the Earth's crust is made up of shifting plates</li> <li>Research is mounting that GMO's are safe<sup>1</sup> (Anti-GMO folks are more likely     to be out of date in their knowledge)</li> <li>Humility makes us behave less brazenly and be more empathetic.</li> <li>Combat this by \"[making] the effort to explain a relevant issue or topic to yourself     or someone else in detail, either out loud or in writing,\"<sup>2</sup> i.e. a sequential     manner where you make an effort to fill in gaps.</li> <li>Challenge your ideas (how am I wrong?) and acknowledge that confirmation bias exists</li> <li>Growth mindset theory:<sup>3</sup> intelligence is malleable</li> <li>Increase open-mindedness by remaining in awe of things</li> </ul> <p>Quote</p> <p>Einstein said... One who never experiences awe ceases to discover.</p>"},{"location":"psychology/shoshin/#references","title":"References","text":"<ol> <li> <p>Fernbach, Philip M., Nicholas Light, Sydney E. Scott, Yoel Inbar, and Paul Rozin. \u201cExtreme Opponents of Genetically Modified Foods Know the Least but Think They Know the Most.\u201d Nature Human Behaviour\u00a03, no. 3 (March 2019): 251\u201356. https://doi.org/10.1038/s41562-018-0520-3.\u00a0\u21a9</p> </li> <li> <p>Psyche. \u201cHow to Foster \u2018Shoshin\u2019 | Psyche Guides.\u201d Accessed May 23, 2022. https://psyche.co/guides/how-to-cultivate-shoshin-or-a-beginners-mind.\u00a0\u21a9</p> </li> <li> <p>Dweck, Carol S.\u00a0Mindset: The New Psychology of Success. Ballantine Books trade pbk. ed. New York: Ballantine Books, 2008.\u00a0\u21a9</p> </li> </ol>"},{"location":"psychology/tsundoku/","title":"Tsundoku","text":"<p>The act of buying books but not reading them. An accidental collection of books<sup>1</sup>, in contrast to bibliomania which revolves around owning books for their tangible beauty.</p> <p>Books were once a luxury, so reading them was coupled tightly.</p> <ol> <li> <p>BBC News. \u201cTsundoku: The Art of Buying Books and Never Reading Them,\u201d July 29, 2018, sec. World. https://www.bbc.com/news/world-44981013.\u00a0\u21a9</p> </li> </ol>"},{"location":"psychology/why-we-read/","title":"Why We Should Read","text":"<p>Quote</p> <p>The purpose of reading is to help us find the inner temple. If we enforce reading, we enforce reflection.</p> <ul> <li>by Dr. Ruth J. Simmons<sup>1</sup></li> </ul> <p>(My interpretation) Reading helps us find peace within ourselves and find serenity.</p> <ol> <li> <p>BOOKSTORES: How to Read More Books in the Golden Age of Content_. Accessed October 5, 2022. https://www.youtube.com/watch?v=lIW5jBrrsS0.\u00a0\u21a9</p> </li> </ol>"},{"location":"psychology/productivity/done/","title":"The Cult of Done Manifesto","text":"<p>Source<sup>1</sup></p> <p>Info</p> <ol> <li>There are three states of being. Not knowing, action and completion.</li> <li>Accept that everything is a draft. It helps to get it done.</li> <li>There is no editing stage.</li> <li>Pretending you know what you\u2019re doing is almost the same as knowing what you are doing, so just accept that you know what you\u2019re doing even if you don\u2019t and do it.</li> <li>Banish procrastination. If you wait more than a week to get an idea done, abandon it.</li> <li>The point of being done is not to finish but to get other things done.</li> <li>Once you\u2019re done you can throw it away.</li> <li>Laugh at perfection. It\u2019s boring and keeps you from being done.</li> <li>People without dirty hands are wrong. Doing something makes you right.</li> <li>Failure counts as done. So do mistakes.</li> <li>Destruction is a variant of done.</li> <li>If you have an idea and publish it on the internet, that counts as a ghost of done.</li> <li>Done is the engine of more.</li> </ol> <ol> <li> <p>Pettis, Bre. \u201cThe Cult of Done Manifesto.\u201d Medium, 2 Aug. 2016, https://medium.com/@bre/the-cult-of-done-manifesto-724ca1c2ff13.\u00a0\u21a9</p> </li> </ol>"},{"location":"sociology/broken-windows/","title":"Broken Window Policing","text":"<ul> <li>A single broken window creates a sense of disorder in a neighborhood</li> <li>If small problems are willfully ignored for a long time, they can slowly deteriorate the \"psychology\" of a project<sup>1</sup></li> </ul> <ol> <li> <p>Thomas, David, and Andrew Hunt. The Pragmatic Programmer, 20th Anniversary Edition: Journey to Mastery. Second edition. Boston: Addison-Wesley, 2019.\u00a0\u21a9</p> </li> </ol>"},{"location":"writing/","title":"On Writing","text":"<p>This section has notes about topics related to writing stories and educational material. It includes information about creating a site like this, and the backbone of my notes, writing to learn and using a zettlekasten system.</p> <p>Here's a seed: On Cultivating a Digital Garden</p>"},{"location":"writing/active_inhibition/","title":"Active Inhibition","text":"<p>Active inhibition is the barrier we create between our long term memory and conscious mind that stops us from accessing it. <sup>1</sup></p> <p>The advantage of this is systematic forgetting such that we only have the gist of the information available to us/what is relevant.</p> <ol> <li> <p>MacLeod, Colin M. \u201cThe Concept of Inhibition in Cognition.\u201d In\u00a0Inhibition in Cognition., edited by David S. Gorfein and Colin M. MacLeod, 3\u201323. Washington: American Psychological Association, 2007. https://doi.org/10.1037/11587-001.\u00a0\u21a9</p> </li> </ol>"},{"location":"writing/autonomy_in_work/","title":"Autonomy in Work","text":"<p>This occurs when we are able to break down our work in to small chunks and steer it in a direction that is most interesting to us. This removes the need for us to use willpower to get things done.<sup>1</sup></p> <ol> <li> <p>How to Take Smart Notes - P. 138\u00a0\u21a9</p> </li> </ol>"},{"location":"writing/book-ahrens-2017/","title":"How to Take Smart Notes","text":"<ul> <li> <p>Two-Slip boxes in one markdown file: note and reference - notes extend and relate to other notes, not in isolation (one note can exist in different contexts - basically, we can understand how different ideas<sup>1</sup>)</p> </li> <li> <p>Read, Think, Understand - then write your note (woops) - we have to write to externalize our ideas</p> </li> <li>Life requires context switching, and notes with an index can help me pick up where I left off in the thought process. This is important for my work, as I am a knowledge worker</li> <li>Strip the workflow of everything that can be considered unimportant (I should probably stop using Notion for note taking - only as content management)</li> <li>The author advises that we always have the tools at hand - pen &amp; paper (anything to capture with)</li> <li> <p>A journal is a \"graveyard for thoughts\", the slip box should be for notes<sup>2</sup></p> </li> <li> <p>Asking yourself what you should learn is a useless question -   it's easier to do things with a clear view of the destination</p> <ul> <li>Deliberate practice helps us become better at making this journey<sup>3</sup></li> </ul> </li> </ul> <p>Quote</p> <p>Nothing counts other than writing.</p> <ul> <li>The main goal<sup>4</sup> of notes is to convey the truth (publishable insight)</li> <li>Note types: Fleeting, Permanent, Project (-specific)</li> <li>In order to find a topic, you need to have studied a subject<ul> <li>This makes me think of an old interview of Alexisonfire, where George says   to make music, you have to listen to music.</li> </ul> </li> </ul> <p>Quote</p> <p>By focusing on what is interesting and keeping written track of your own intellectual development, topics, questions and arguments will emerge from the material without force.</p> <ul> <li>Rewarding work starts the positive feedback loop<ul> <li>Writing provides the feedback portion (we're forced to assess if we're understanding the material)</li> </ul> </li> <li>Mere Exposure Effect:  If we do something a lot, we think we're good at it, even if we're not</li> <li>Focused attention is not very long. New technology damages our ability to practice sustained attention (where we work on one thing at a time)</li> <li>Creativity requires keeping an open mind and being able to switch to a narrow, analytical approach</li> <li>Memo-ize memories - group in to bundles, rather than discrete facts</li> <li>\"Mind Like Water\" - get knowledge out of our short term memory</li> </ul> <p>Question</p> <p>Who said the above quote?</p> <ul> <li>Willpower is like muscles - requires rest and gets exhausted quickly but can be strengthened</li> <li>Hand writing facilitates understanding because it is slow - college students have to understand what they hear rather than copy it down</li> <li>Shorter, in your own words allows us to focus on patterns, frames, and categories of an excerpt</li> <li>Re-reading breeds familiarity, writing forces us to confront misunderstanding</li> <li>Cramming is for short term retention, not for learning</li> <li> <p>The brain prioritizes comfort and its own happiness (like ego in The Power of Now)</p> <ul> <li>Writing was Richard Feynman's thinking process (think outside your brain)</li> </ul> </li> <li> <p>Forgetting can sometimes be done by our minds as a filter so we don't get flooded with memories and associations (think join models in SQL)</p> </li> <li> <p>Memory can be measured by storage and retrieval strength</p> <ul> <li>Storage strength can't be improved</li> </ul> </li> <li> <p>Linking is key!</p> <ul> <li>Keep an eye towards other notes and contexts such that you can build the matrix around things you're interested in</li> </ul> </li> <li> <p>Contradictions, paradoxes and problems help us reassess pre-existing knowledge stored in the slip-box (corrects for the feature-positive effect)</p> </li> <li> <p>Remember that the slip-box is just a tool<sup>5</sup></p> </li> <li>Worldly Wisdom: hanging life experiences on mental models</li> <li> <p>Spaced repitition and active recall are important for information retention.</p> </li> <li> <p>One idea per permanent note - place limits so that they stay concise.</p> <ul> <li>Structure (experiment) and restrictions (assess what is important) are necessary for creativity</li> </ul> </li> <li> <p>The brain prioritizes information that is recently acquired and with emotions attached to it</p> </li> <li> <p>Evolution works by trial &amp; error, not planning<sup>6</sup></p> </li> <li> <p>Motivation is relational (students must   identify with and see the purpose of their work)</p> <ul> <li>And be free</li> </ul> </li> <li> <p>Athletes are more motivated when they imagine the training it takes to win.<sup>7</sup> How can I implement this?</p> </li> <li>Build new habits to replace old ones, don't force old habits away<ul> <li>The goal of learning is to evolve</li> </ul> </li> </ul>"},{"location":"writing/book-ahrens-2017/#my-routinetakeaways","title":"My Routine/Takeaways","text":"<ul> <li>Keep a pen &amp; paper handy at all times (if anything, just to avoid opening your phone when in the middle of a book)</li> <li>Abandon the notion of making perfect notes. Do you think the multicolored shit people made in college is something that would have helped you? Why not just make art instead?</li> <li>When processing notes, open up the source with anything you've highlighted<ul> <li>ex. the Kindle notes &amp; highlights for this book</li> </ul> </li> <li>Many of my attitudes towards learning are not conducive to learning, but to accomplishing a very specific task.</li> <li>Turn the writing everything and thinking about process in to a hobby.</li> </ul> <ol> <li> <p>Page 20\u00a0\u21a9</p> </li> <li> <p>https://www.jstor.org/stable/3397642 \u21a9</p> </li> <li> <p>Ericsson, K. Anders, and Kyle W. Harwell. \u201cDeliberate Practice and Proposed Limits on the Effects of Practice on the Acquisition of Expert Performance: Why the Original Definition Matters and Recommendations for Future Research.\u201d Frontiers in Psychology 10 (2019). https://www.frontiersin.org/articles/10.3389/fpsyg.2019.02396.\u00a0\u21a9</p> </li> <li> <p>Ahrens, S\u00f6nke.\u00a0How to Take Smart Notes: One Simple Technique to Boost Writing, Learning and Thinking: For Students, Academics and Nonfiction Book Writers. North Charleston, SC: CreateSpace, 2017.\u00a0\u21a9</p> </li> <li> <p>https://www.reddit.com/r/Zettelkasten/comments/ots96r/on_a_failed_zettelkasten/ \u21a9</p> </li> <li> <p>Page 135\u00a0\u21a9</p> </li> <li> <p>Singer, Robert N., Heather A. Hausenblas, and Christopher Janelle, eds.\u00a0Handbook of Sport Psychology. 2nd ed. New York: Wiley, 2001.\u00a0\u21a9</p> </li> </ol>"},{"location":"writing/cultivation/","title":"Cultivating a Digital Garden","text":"<p>I\u2019m going for a feeling of wonderment, a connection across time.</p> <p>source</p> <p>Collage-like &amp; artsy websites described in the vein of Myspace and Tumblr where people explore their niche interests.<sup>1</sup></p> <p>The garden is farmland that delights the senses, designed for delight rather than commodity.</p> <p>source</p> <p>Design does or doesn't matter. Sometimes the journey is the garden, other times its the personal nature of the content.</p> <p>\u201cWith blogging, you\u2019re talking to a large audience,\u201d he says. \u201cWith digital gardening, you\u2019re talking to yourself. You focus on what you want to cultivate over time.\u201d <sup>2</sup></p> <p>They can evolve and change. Contain an ethos of creativity and individuality.</p> <ol> <li> <p>\u201cDigital Gardens Let You Cultivate Your Own Little Bit of the Internet.\u201d\u00a0MIT Technology Review, https://www.technologyreview.com/2020/09/03/1007716/digital-gardens-let-you-cultivate-your-own-little-bit-of-the-internet/. Accessed 25 May 2022.\u00a0\u21a9</p> </li> <li> <p>https://tomcritchlow.com/wiki/ \u21a9</p> </li> </ol>"},{"location":"writing/feature_positive_effect/","title":"Feature Positive Effect","text":"<p>We overestimate the importance of information that is most easily available to us, not the most relevant.<sup>1</sup></p> <ol> <li> <p>Allison, Scott T., and David M. Messick. \u201cThe Feature-Positive Effect, Attitude Strength, and Degree of Perceived Consensus.\u201d\u00a0Personality and Social Psychology Bulletin\u00a014, no. 2 (June 1988): 231\u201341. https://doi.org/10.1177/0146167288142002.\u00a0\u21a9</p> </li> </ol>"},{"location":"writing/goal_of_learning/","title":"Goal of Learning","text":"<p>Quote</p> <p>The goal of learning is not to accumulate knowledge but about becoming a different person with a different way of thinking.</p> <ul> <li>The author is trying to say<sup>1</sup> that we learn to grow, not collect.</li> </ul> <ol> <li> <p>How to take Smart Notes \u21a9</p> </li> </ol>"},{"location":"writing/mere_exposure_effect/","title":"Mere Exposure Effect (stub)","text":"<p>If we do something a lot, we think we're good at it, even if we're not.</p>"},{"location":"writing/motivation_when_studying/","title":"Motivation when Studying","text":"<ul> <li> <p>Students fail when they are not motivated</p> <ul> <li>When they don't see the meaning in their work<sup>1</sup></li> <li>When they can't connect it to their goals<sup>2</sup></li> <li>When they lack freedom</li> </ul> </li> <li> <p>Motivation comes best from enjoying your work</p> <ul> <li>Turn the writing everything and thinking about process in to a hobby<ul> <li>The book says artists and scientists are essentially information hobbyists.</li> <li>Think Rivers Cuomo</li> </ul> </li> </ul> </li> </ul> <ol> <li> <p>Balduf, Megan. \u201cUnderachievement Among College Students.\u201d Journal of Advanced Academics 20, no. 2 (February 2009): 274\u201394. https://doi.org/10.1177/1932202X0902000204.\u00a0\u21a9</p> </li> <li> <p>Glynn, Shawn M., Gita Taasoobshirazi, and Peggy Brickman. \u201cScience Motivation Questionnaire: Construct Validation with Nonscience Majors.\u201d\u00a0Journal of Research in Science Teaching\u00a046, no. 2 (February 2009): 127\u201346. https://doi.org/10.1002/tea.20267.\u00a0\u21a9</p> </li> </ol>"},{"location":"writing/worldly_wisdom/","title":"Wordly Wisdom","text":"<ul> <li>Combine mental models with your life experiences<sup>1</sup><ul> <li>Charlie Munger (Berkshire Hathaway chairman, Warren Buffett's partner)</li> </ul> </li> </ul> <ol> <li> <p>James Clear. \u201cA Lesson on Elementary, Worldly Wisdom.\u201d Accessed October 2, 2022. https://jamesclear.com/great-speeches/a-lesson-on-elementary-worldly-wisdom-by-charlie-munger.\u00a0\u21a9</p> </li> </ol>"},{"location":"writing/write_to_learn/","title":"Write to Learn","text":"<ul> <li>When you write as you learn, you create a tangible outcome out of what you've read.<sup>1</sup></li> <li>I think what inhibits me is that I want everything to be perfect and pristine, when in reality it's the substance that matters. Notes can be messy and disorganized, so long as you understand what you're putting in your brain.<ul> <li>Write down anything you think is helpful to understanding or need to remember</li> <li>When you process, then you can create perfection (the structure is important)</li> </ul> </li> </ul> <ol> <li> <p>How to Take Smart Notes \u21a9</p> </li> </ol>"}]}